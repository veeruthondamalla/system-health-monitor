import { Component, OnInit, ViewEncapsulation,ElementRef,Renderer2  } from '@angular/core';
//import * as d3 from 'd3-selection';
import * as d3 from 'd3';
import * as d3Scale from 'd3-scale';
import * as d3Shape from 'd3-shape';
import { Ng4LoadingSpinnerService } from 'ng4-loading-spinner';

import { POPULATION } from '../shared/population';

export interface Food {
    value: string;
    viewValue: string;
  }

  
export interface monthyear {
    value: string;
    viewValue: string;
  }
  

@Component({
    selector: 'app-dashboard',
    templateUrl: './dashboard.component.html',
    styleUrls: ['./dashboard.component.css']
})
export class DashboardComponent implements OnInit {
    title = 'Donut Chart';
    Month: any = "April";
    year: any= "2019";
    private width: number;
    private height: number;
    optionsSelect: Array<any>;


    private svg: any;     // TODO replace all `any` by the right type

    private radius: number;

    private arc: any;
    private pie: any;
    private color: any;

    private g: any;

    constructor(private renderer:Renderer2, private el:ElementRef,private spinnerService: Ng4LoadingSpinnerService
        ) {
        // window.location.reload();
        // return false;

    }

    data:any = [
        {
            value: '1', data_status: '1'
        } ,
        
        {
            value: '2', data_status: '0'
        } ,
        {
            value: '3', data_status: '0'
        } ,
        {
            value: '4', data_status: '-1'
        } ,
        {
            value: '5', data_status: '1'
        } ,
        {
            value: '6', data_status: '-1'
        } ,
        {
            value: '7', data_status: '1'
        } ,{
            value: '8', data_status: '1'
        } ,{
            value: '9', data_status: '0'
        } ,{
            value: '10', data_status: '-1'
        } ,{
            value: '11', data_status: '1'
        } ,{
            value: '12', data_status: '1'
        } ,{
            value: '13', data_status: '1'
        } ,{
            value: '14', data_status: '0'
        } ,{
            value: '15', data_status: '1'
        } ,{
            value: '16', data_status: '-1'
        } ,{
            value: '17', data_status: '0'
        } ,{
            value: '18', data_status: '1'
        } ,
        
        ];

    
    ngOnInit() {
        this.initSvg();
        this.drawChart(POPULATION);

    }



    private initSvg() {
        this.svg = d3.select('svg');

        this.width = +this.svg.attr('width');
        this.height = +this.svg.attr('height');
        this.radius = Math.min(this.width, this.height) / 2;

        this.color = d3Scale.scaleOrdinal()
            .range(['#03d54d','#f11717','#b6b6b6']);

        this.arc = d3Shape.arc()
            .outerRadius(this.radius - 99)
            .innerRadius(this.radius - 60);

        this.pie = d3Shape.pie()
            .sort(null)
            .value((d: any) => d.population);

        this.svg = d3.select('svg')
            .append('g')
            .attr('transform', 'translate(' + this.width / 2 + ',' + this.height / 2 + ')');
    }


    private drawChart(data: any[]) {
        let g = this.svg.selectAll('.arc')
            .data(this.pie(data))
            .enter().append('g')
            .attr('class', 'arc');



       const path =  g.append('path')
            .attr('d', this.arc)
            .style('fill', d => this.color(d.data.population))

           
      
            g.append('text')  
            .attr('transform', parms => {
               //  const _d = this.arc.centroid( parms ) 
               const _dd = this.arc.centroid( parms );
                 _dd[0] *= 1.5;
                 _dd[1] *= 1.5;
                return 'translate(' + _dd + ')'
            })
          
                  .attr('dy', ".05em")
            .text(d => d.data.population + "%");

            g.append("text")
            .attr("text-anchor", "middle")
              .attr('font-size', '2em')
              .attr('y', 4)
            .text(this.Month);

            g.append("text")
            .attr("text-anchor", "middle")
              .attr('font-size', '1em')
              .attr('y', 25)
            .text(this.year);

            path.transition()
            .duration(1000)
            .attrTween('d', function (d) {
              const interpolate = d3.interpolate({ startAngle: 0, endAngle: 0 }, d);
               return function (t) {
                return this.arc(interpolate(t));
               };
            });

     
    }

    // foods: Food[] = [
    //     {value: 'steak-0', viewValue: 'client 1'},
    //     {value: 'pizza-1', viewValue: 'client 2'},
    //     {value: 'tacos-2', viewValue: 'client 3'}
    //   ];
    
    
  
      showMore(){
            (document.querySelector('.showmore') as HTMLElement).style.visibility = 'unset';
            (document.querySelector('.showmore') as HTMLElement).classList.add('animated');
            (document.querySelector('.svg-container') as HTMLElement).classList.add('animated');
        
            
      }



}
